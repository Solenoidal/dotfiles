[[plugins]]
repo = 'Shougo/context_filetype.vim'
on_ft = 'toml'
hook_source = '''
let g:context_filetype#ignore_patterns = {
    \ 'toml': ['^\s*#\s*'],
    \ }
'''
# [[plugins]]
# repo = 'osyo-manga/vim-precious'
# on_ft = 'toml'
# depends = ['context_filetype.vim']
# on_source = 'context_filetype.vim'

[[plugins]]
repo = 'lfilho/cosco.vim'
on_ft = ['php', 'rust', 'java', 'dart']
hook_source = '''
autocmd FileType php,rust,java,dart nmap <silent> <Leader>; <Plug>(cosco-commaOrSemiColon)
" autocmd FileType php,rust,java,dart imap <silent> <Leader>; <c-o><Plug>(cosco-commaOrSemiColon)
" let g:auto_comma_or_semicolon = 1
let g:cosco_filetype_whitelist = ['php', 'rust', 'java', 'dart']
'''

## develop init.lua
[[plugins]]
repo = 'folke/lua-dev.nvim'
depends = ['nvim-lspconfig']
on_ft = 'lua'
hook_source = '''
lua << EOF
require('custom.lsp.lua')
EOF
'''

# [[plugins]]
# repo = 'skanehira/denops-gh.vim'
# depends = ['denops.vim']

# [[plugins]]
# repo = 'mattn/emmet-vim'
# on_fr = [ "html" ]

[[plugins]]
repo = 'dag/vim-fish'
on_ft = 'fish'

## general purpose purser
[[plugins]]
repo = 'nvim-treesitter/nvim-treesitter'
merged = 0
if = 'has("nvim")'
on_event = 'BufRead'
hook_post_update = 'TSUpdate'
hook_source = '''
lua <<EOF
require'nvim-treesitter.configs'.setup {
    ensure_installed = {
      -- shell
      'bash', 'fish',
      -- JVM
      'java', 'kotlin',
      -- Web
      'html', 'pug',
      'javascript', 'jsdoc', 'typescript', 'tsx', 'vue',
      -- setting files
      'json', 'json5', 'jsonc', 'yaml', 'toml',
      -- vim
      'vim', 'lua',
      -- other language
      'commonlisp',
      'dart',
      'go',
      'php',
      'python',
      'rust',
      -- other type
      'markdown',
      'comment',
      'http',
      'graphql',
    },
    highlight = {
        enable = true,
        disable = {
          -- 'lua',
          'vim',
          'fish',
        },
        additional_vim_regex_highlighting = false,
    },
    incremental_selection = {
      enable = true,
    },
    rainbow = {
      enable = false,
      exteded_mode = true,
      max_file_lines = nil,
    },
    indent = {
      enable = false,
    }
}
EOF
'''
# FIX: エラー発生中
[[plugins]]
repo = 'p00f/nvim-ts-rainbow'
on_source = 'nvim-treesitter'
# [[plugins]]
# repo = 'romgrk/nvim-treesitter-context'
# on_source = 'nvim-treesitter'

## TODO: comment highlight
## FIX: ddu-ui-ffと競合している。とりあえずは無効化する
# [[plugins]]
# repo = 'folke/todo-comments.nvim'
# depends = ['plenary.nvim']
# on_event = 'BufRead'
# hook_source = '''
# lua << EOF
# require('todo-comments').setup {}
# EOF
# '''

[[plugins]]
repo = 'Shougo/deol.nvim'
depends = ['ddu.vim']
hook_add = '''
  " basic workflow
  " 1. C-s: open terminal
  " 2. open another tab
  " 3. <C-t>: switch tab
  nnoremap <silent> <C-s>
  \ <Cmd>Deol zsh -no-start-insert -toggle -split=farright<CR>
  nnoremap <silent> sD <Cmd>call deol#kill_editor()<CR>
  nnoremap <silent> <C-t> <Cmd>Ddu -name=deol
  \ -ui-param-split=floating
  \ -ui-param-winRow=1 -ui-param-autoResize
  \ -ui-param-cursorPos=`tabpagenr()-1`
  \ deol<CR>
'''
hook_source = '''
  let g:deol#enable_dir_changed = v:false
  let g:deol#prompt_pattern = '\w*% \?'
  let g:deol#shell_history_path = '~/.zsh-history'
  let g:deol#extra_options = {
      \ 'term_kill': 'kill',
      \ }
  call ddu#custom#patch_global({
      \   'sourceParams': {
      \     'deol': {
      \       'command': ['zsh'],
      \     },
      \   }
      \ })

  tnoremap <ESC> <C-\><C-n>
  " tnoremap <expr><C-t> ddc#manual_complete()
  " tnoremap <silent><expr> <Tab> pum#visible() ?
  "     \ '<Cmd>call pum#map#insert_relative(+1)<CR>' :
  "     \ '<Tab>'
  " tnoremap <silent><expr> <S-Tab> pum#visible() ?
  "     \ '<Cmd>call pum#map#insert_relative(-1)<CR>' :
  "     \ '<S-Tab>'
  " tnoremap <Down>   <Cmd>call pum#map#select_relative(+1)<CR>
  " tnoremap <Up>     <Cmd>call pum#map#select_relative(-1)<CR>
  " tnoremap <silent><expr> <C-y>
  "     \ pum#visible() ? '<Cmd>call pum#map#confirm()<CR>' : '<C-y>'
  " tnoremap <silent><expr> <C-e>
  "     \ pum#visible() ? '<Cmd>call pum#map#cancel()<CR>' : '<C-e>'
'''
[plugins.ftplugin]
deol = '''
  nnoremap <buffer><silent> gc
  \ <Cmd>call deol#send('git commit')<CR>
  nnoremap <buffer><silent> gs
  \ <Cmd>call deol#send('git status')<CR>
  nnoremap <buffer><silent> gA
  \ <Cmd>call deol#send('git commit --amend')<CR>
  nmap <buffer> e <Plug>(deol_edit)
  tmap <buffer> <CR> <Plug>(deol_execute_line)
  call ddc#custom#patch_buffer('sourceOptions', {
      \ '_': {
      \   'converters': [],
      \ },
      \ })
'''
