# Don't ask for confirmations
assume_yes = true

# Disable specific steps - same options as the command line flag
disable = [
  "git_repos",
  "mas",
  "emacs",
  "vim",
  "system",
  "containers",
  "node",
  "pip3",
]

# Ignore failures for these steps
#ignore_failures = ["powershell"]

# Run specific steps - same options as the command line flag
#only = ["system", "emacs"]

# Do not ask to retry failed steps (default: false)
no_retry = true

# Run inside tmux
#run_in_tmux = true

# Arguments to pass tmux when pulling Repositories
#tmux_arguments = "-S /var/tmux.sock"

# Do not set the terminal title
#set_title = false

# Display the time in step titles
display_time = true

# Cleanup temporary or old files
cleanup = true

[git]
#max_concurrency = 5
repos = [
  # "~/ghq/**/",
  # "~/ghq-karabiner/**/",
  "~/ghq/github.com/android/compose-samples",
  "~/LocalProject/neovim_minimal/plugins/**/",
]

# Don't pull the predefined git repos
pull_predefined = false

# Arguments to pass Git when pulling Repositories
arguments = "--rebase --autostash"

[composer]
#self_update = true

# Commands to run before anything
[pre_commands]
#"Emacs Snapshot" = "rm -rf ~/.emacs.d/elpa.bak && cp -rl ~/.emacs.d/elpa ~/.emacs.d/elpa.bak"

# Custom commands
[commands]
#"Python Environment" = "~/dev/.env/bin/pip install -i https://pypi.python.org/simple -U --upgrade-strategy eager jupyter"

[brew]
greedy_cask = true

[linux]
# Arch Package Manager to use. Allowed values: autodetect, trizen, paru, yay, pikaur, pacman, pamac.
#arch_package_manager = "pacman"
# Arguments to pass yay (or paru) when updating packages
#yay_arguments = "--nodevel"
#show_arch_news = true
#trizen_arguments = "--devel"
#pikaur_arguments = ""
#pamac_arguments = "--no-devel"
#enable_tlmgr = true
#emerge_sync_flags = "-q"
#emerge_update_flags = "-uDNa --with-bdeps=y world"
#redhat_distro_sync = false
#rpm_ostree = false
